package main

import (
	"context"
	"encoding/json"
	"fmt"
	"io"
	"log"
	"os"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

type Response struct {
	StatusCode int         `json:"statusCode"`
	Body       interface{} `json:"body"`
}

var botInstance *tgbotapi.BotAPI

func init() {
	telegramToken := os.Getenv("TELEGRAM_TOKEN")
	if telegramToken == "" {
		log.Fatal("TELEGRAM_TOKEN environment variable is required")
	}

	var err error
	botInstance, err = tgbotapi.NewBotAPI(telegramToken)
	if err != nil {
		log.Fatal("Failed to create bot:", err)
	}
}

func Handler(ctx context.Context) (*Response, error) {
	// –ß–∏—Ç–∞–µ–º —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ –∏–∑ stdin
	body, err := io.ReadAll(os.Stdin)
	if err != nil {
		log.Printf("Error reading request body: %v", err)
		return &Response{
			StatusCode: 400,
			Body:       "Bad request",
		}, nil
	}

	// –ü–∞—Ä—Å–∏–º JSON –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞–ø—Ä—è–º—É—é
	var update tgbotapi.Update
	if err := json.Unmarshal(body, &update); err != nil {
		log.Printf("Error decoding update: %v", err)
		return &Response{
			StatusCode: 400,
			Body:       "Bad request",
		}, nil
	}

	// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
	if update.Message != nil {
		handleMessage(update.Message)
	}

	return &Response{
		StatusCode: 200,
		Body:       "OK",
	}, nil
}

func handleMessage(message *tgbotapi.Message) {
	var responseText string

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
	if message.IsCommand() {
		switch message.Command() {
		case "start":
			responseText = handleStartCommand(message)
		default:
			responseText = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã."
		}
	} else {
		responseText = "Echo: " + message.Text
	}

	msg := tgbotapi.NewMessage(message.Chat.ID, responseText)
	if !message.IsCommand() {
		msg.ReplyToMessageID = message.MessageID
	}

	if _, err := botInstance.Send(msg); err != nil {
		log.Printf("Failed to send message: %v", err)
	}
}

func handleStartCommand(message *tgbotapi.Message) string {
	userName := message.From.FirstName
	if userName == "" {
		userName = message.From.UserName
	}
	if userName == "" {
		userName = "–¥—Ä—É–≥"
	}

	log.Printf("User %s (%d) started the bot", userName, message.From.ID)

	return fmt.Sprintf("–ü—Ä–∏–≤–µ—Ç, %s! üëã\n\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç!\n\n–Ø –º–æ–≥—É:\n‚Ä¢ –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è\n‚Ä¢ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã\n\n–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ —á—Ç–æ-–Ω–∏–±—É–¥—å!", userName)
}